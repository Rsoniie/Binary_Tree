********USING RECURSSION DFS**********
/*************************************************************
 
    Following is the Binary Tree node structure:

    template <typename T>

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;
        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
void solve(BinaryTreeNode<int>*root, vector<int>&ans, int lvl)
{
    if(root == NULL)
    {
        return ;
    }
    if(ans.size() == lvl)
    {
        ans.push_back(root -> data);
    } 
    solve(root -> right, ans, lvl+1);
    solve(root -> left, ans, lvl+1);
    
}
vector<int> printRightView(BinaryTreeNode<int>* root) {
    vector<int> ans;
    if(root == NULL)
    {
        return ans;
    }
    int lvl = 0;
    solve(root, ans, lvl);
    return ans;
}
