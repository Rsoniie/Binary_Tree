*************USING BFS ALGORITHM***********

#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> getTopView(TreeNode<int> *root) {
    vector<int> ans;
    if (root == NULL) {
      return ans;
    }

    queue<pair<TreeNode<int> *, int>> q;
    q.push({root, 0});
    map<int,int> m;
    while(!q.empty())
    {
        TreeNode<int>* node = q.front().first;
        int hd = q.front().second;
        q.pop();
        if(m.find(hd) == m.end())
        {
            m[hd] = node ->val;
        }

        if(node -> left)
        {
            q.push({node -> left, hd-1});
        }
        if(node -> right)
        {
            q.push({node -> right, hd+1});
        }
    }

    for(auto i:m)
    {
        ans.push_back(i.second);
    }
    return ans;
}
