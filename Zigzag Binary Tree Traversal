**********USING BFS**********
#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> zigzagTreeTraversal(TreeNode<int> *root)
{
    vector<int> res;
    if(root == NULL)
    {
        return res;
    }
    queue<TreeNode<int>*> q;
    q.push(root);
    bool flag = true;
    while(!q.empty())
    {
        int n = q.size();
        vector<int> ans;
        for(int i=0;i<n;i++)
        {
            TreeNode<int>* x = q.front();
            q.pop();
            ans.push_back(x -> data);
            if(x -> left)
            {
                q.push(x -> left);
            }
            if(x -> right)
            {
                q.push(x -> right);
            }
        }
        if(flag ==false)
        {
            reverse(ans.begin() , ans.end());
        }
        flag = !flag;
        for(auto i:ans)
        {
            res.push_back(i);
        }
        
    }

    return res;
}
