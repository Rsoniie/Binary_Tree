*********USING BFS TRAVERSAL****************
#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

    vector<int> ans;
    if(root == NULL)
    {
        return ans;
    }
    map<int,int> m;
    queue<pair<BinaryTreeNode<int> *, int> > q;
    q.push(make_pair(root, 0));
    while(!q.empty())
    {
        pair<BinaryTreeNode<int> *, int> temp = q.front();
        q.pop();
        BinaryTreeNode<int> * frontnode = temp.first;
        int hd = temp.second;
        m[hd]= frontnode -> data;
        if(frontnode -> left)
        {
            q.push(make_pair(frontnode -> left, hd-1));
            
        }
        if(frontnode -> right)
        {
            q.push(make_pair(frontnode -> right, hd+1));
        }
    }
    for(auto i:m)
    {
        ans.push_back(i.second);
    }
    return ans;
    
}
