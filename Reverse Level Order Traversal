******APPROACH 1 TRAVERSE NORMAL LEVEL ORDER AND THEN REVERSE IT*********************
# include<bits/stdc++.h>


vector<int> reverseLevelOrder(TreeNode<int> *root){
    vector<int> ans;
    queue<TreeNode<int>*> q;
    q.push(root);
    while(!q.empty())
    {
        TreeNode<int>* node = q.front();
        q.pop();
        if(node != NULL)
        {
            ans.push_back(node -> val);
            if(node -> left)
            {
                q.push(node -> left);
            }
            if(node -> right)
            {
                q.push(node -> right);
            }
        }
    }

    reverse(ans.begin(), ans.end());
    return ans;
}
